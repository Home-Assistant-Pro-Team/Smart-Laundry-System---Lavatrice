automation:
  - alias: "Elettrodomestici: notifiche push"
    id: push_elettrodomestici
    initial_state: "true"
    mode: queued
    trigger:
      - platform: event
        event_type: elettrodomestici
        event_data:
          push: "true"
    action:
      - alias: Invia notifica notifica push
        repeat:
          for_each: >-
            {# se impostato "home o not_home" valuta la presenza in casa, se non specificato invia a tutti altrimenti for_each: lista_entity #}
            {% from 'personal.jinja' import persons %}
            {% set output = namespace(state_home=[]) %}
            {% for dict in persons() | from_json %}
              {% if trigger.event.data.for_each in ['home', 'not_home'] and states[dict.person].state == trigger.event.data.for_each %}
                {% set output.state_home = output.state_home + ['notify.'+dict['notify']] %}
              {% endif %}
            {% endfor %}
            {% if output.state_home | count > 0 %}
              {{ output.state_home }}
            {% elif trigger.event.data.for_each is defined and trigger.event.data.for_each not in ['home', 'not_home']%}
              {{ trigger.event.data.for_each }}
            {% else %}
              {% for dict in persons() | from_json %}
                {%- set output.state_home = output.state_home + ['notify.'+dict['notify']] -%}
              {% endfor %}
              {{ output.state_home }}  
            {% endif %}
          sequence:
            - service: "{{ repeat.item }}"
              data:
                message: "{{ trigger.event.data.message | default('Messaggio non impostato') }}"
                title: "{{ trigger.event.data.title | default('--Elettrodomestici--') }}"
                data:
                  tag: "{{ trigger.event.data.tag | default(None) }}"
                  notification_icon: "{{ trigger.event.data.notification_icon | default('mdi:home-assistant') }}"
                  color: "{{ trigger.event.data.color | default('green') }}"
                  sticky: "{{ trigger.event.data.sticky | default('true') }}"
                  actions:
                    - action: "{{ trigger.event.data.action1 |default(None) }}"
                      title: "{{ trigger.event.data.title1 |default(None) }}"
                      uri: "{{ trigger.event.data.uri1 | default(None) }}"
                    - action: "{{ trigger.event.data.action2 | default(None) }}"
                      title: "{{ trigger.event.data.title2 | default(None) }}"
                      uri: "{{ trigger.event.data.uri2 | default(None) }}"
